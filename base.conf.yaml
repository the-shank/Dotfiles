- defaults:
      link:
          create: true
          relink: true
      shell:
          stdout: true
          stderr: true

- clean: ['~', '~/.config']

- shell:
      - [git submodule update --init --recursive, Installing submodules]

- create:
      - ~/Applications
      - ~/code
      - ~/code/algo
      - ~/code/reference
      - ~/code/tmp
      - ~/code/utils
      - ~/code/go
      - ~/code/go/src
      - ~/code/go/pkg
      - ~/.local/bin
      - ~/.local/gobin

- shell:
      - ["bash scripts/tmux.sh", Install Tmux Plugin Manager]

- link:
      # Shell (bash & zsh)
      ~/.profile: config/bash/profile
      ~/.bashrc: config/bash/bashrc
      ~/.zshrc: config/zsh/zshrc
      ~/.bash_aliases: config/bash/bash_aliases

      # Shell (fish)
      ~/.config/fish/config.fish: config/fish/config.fish
      ~/.config/fish/fishfile: config/fish/fishfile
      ~/.config/fish:
          path: config/fish/**/*
          glob: true

      # Git
      ~/.gitconfig: config/git/gitconfig
      ~/.gitignore_global: config/git/gitignore_global
      ~/.local/bin/git-open: bin/git-open

      # Clang
      ~/.clang-format: config/clang-format

      # youtube-dl
      ~/.config/youtube-dl/config: config/youtube-dl/config

      # MPV Media Player
      ~/.config/mpv/input.conf: config/mpv/input.conf
      ~/.config/mpv/mpv.conf: config/mpv/mpv.conf

      # Neovim
      ~/.config/nvim/init.vim: config/nvim/init.vim
      ~/.config/nvim/plugins.vim: config/nvim/plugins.vim
      ~/.config/nvim/settings.vim: config/nvim/settings.vim
      ~/.config/nvim/mappings.vim: config/nvim/mappings.vim
      ~/.config/nvim/coc-settings.json: config/nvim/coc-settings.json
      ~/.config/nvim/plug-config:
        path: config/nvim/plug-config/*.vim
        glob: true

      # Tmux
      ~/.tmux.conf: config/tmux/tmux.conf

      # Alacritty (terminal)
      ~/.config/alacritty/alacritty.yml: config/alacritty/alacritty.yml

      # Kitty (terminal)
      ~/.config/kitty:
          path: config/kitty/*
          glob: true

      # Matplotlib
      ~/.config/matplotlib/matplotlibrc: config/matplotlib/matplotlibrc

      # Obsidian Sync
      # setup a crontab (using crontab -e) with the following line
      # */30 * * * * /home/shank/.local/bin/osync >>/home/shank/.osync_log 2>&1
      ~/.local/bin/osync: bin/osync

      # Lf (file manager)
      ~/.config/lf/lfrc: config/lf/lfrc

      # Tridactly (Firefox)
      # ensure that `native` messenger is installed and working
      # install it via `:installnative`
      # check it via `:native`
      ~/.config/tridactyl/tridactylrc: config/tridactyl/tridactylrc

      # SSH config for working behind PROXY
      # Needs to have corkscrew installed
      # myauth file contains username:password for the proxy
      ~/.ssh/config: config/ssh/config

      # IPython
      ~/.ipython/profile_default/ipython_config.py: config/ipython/profile_default/ipython_config.py

      # MyCli
      ~/.myclirc: config/mycli/myclirc

      # PgCli
      ~/.config/pgcli/config: config/pgcli/config
